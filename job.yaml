apiVersion: batch/v1
kind: Job
metadata:
  name: concept-sidecar-pattern
spec:
  template:
    spec:
      serviceAccountName: k8s-watcher-sa
      initContainers:
        - name: download-source-from-s3
          image: minio/mc:latest
          command: ["/bin/sh", "-c"]

          args:
            - |
              mc alias set minio http://minio:9000 minio minio123
              mc mirror minio/concept-car-bucket/source /source

          imagePullPolicy: Always
          volumeMounts:
            - name: source-dir
              mountPath: "/source"

      containers:
        - name: main-container
          image: busybox:latest
          command: ["/bin/sh", "-c"]
          args:
            - |
                touch /target/1.txt;
                sleep 3;
                touch /target/2.txt;
                sleep 60;
                touch /target/3.txt /target/4.txt /target/5.txt /target/6.txt;

          volumeMounts:
            - name: source-dir
              mountPath: "/source"
            - name: target-dir
              mountPath: "/target"

        - name: upload-target-to-s3
          image: k8s-watcher
          args: [ "/target", "target" ]

          envFrom:
            - configMapRef:
                name: minio-watcher-config
          env:
          - name: JOB_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.labels['job-name']
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace

          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: target-dir
              mountPath: "/target"


      volumes:
      - name: source-dir
        emptyDir: {}
      - name: target-dir
        emptyDir: {}

      restartPolicy: Never


  backoffLimit: 0
  ttlSecondsAfterFinished: 3600


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-watcher-config
data:
  ENDPOINT_URL: "http://minio:9000"
  BUCKET_NAME: "concept-car-bucket"
  ACCESS_KEY: "minio"
  SECRET_KEY: "minio123"


---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-watcher-sa

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-watcher-role
rules:
  - apiGroups: [ "batch" ]
    resources: [ "jobs" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "list", "watch" ]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-watcher-role
subjects:
  - kind: ServiceAccount
    name: k8s-watcher-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: k8s-watcher-role
  apiGroup: rbac.authorization.k8s.io